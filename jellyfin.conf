server {
    # 监听所有到 8096 的流量，作为默认虚拟主机
    listen       8096 default_server;
    # 不做任何主机名匹配，接收所有 Host
    server_name  _;

    # 所有请求都反代到 Jellyfin
    location / {
        proxy_pass               http://jellyfin:8096;
        proxy_pass_request_headers on;
        proxy_set_header         Host                $host;
        proxy_set_header         X-Real-IP           $remote_addr;
        proxy_set_header         X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header         X-Forwarded-Proto   $scheme;
        proxy_set_header         X-Forwarded-Host    $http_host;
        proxy_buffering          off;
    }
    location = /danmu_setting_beautify.js {
        alias /usr/share/nginx/html/js/danmu_setting_beautify.js;
        add_header Content-Type application/javascript;
    }

    location = /web/danmu_setting_beautify.js {
        alias /usr/share/nginx/html/js/danmu_setting_beautify.js;
        add_header Content-Type application/javascript;
    }


    location = /web/index.html {
        return 301 /web/;
    }

    location = /web/ {
        proxy_pass               http://jellyfin:8096/web/;
        proxy_pass_request_headers on;
        proxy_set_header         Host                $host;
        proxy_set_header         X-Real-IP           $remote_addr;
        proxy_set_header         X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header         X-Forwarded-Proto   $scheme;
        proxy_set_header         X-Forwarded-Host    $http_host;

        proxy_set_header         Accept-Encoding     "";
        sub_filter               '</body>' '<script src="/danmu_setting_beautify.js" defer></script>';
        sub_filter_once          on;
    }

    location /socket {
        proxy_pass               http://jellyfin:8096/socket;
        proxy_http_version       1.1;
        proxy_set_header         Upgrade             $http_upgrade;
        proxy_set_header         Connection          "upgrade";
        proxy_set_header         Host                $host;
        proxy_set_header         X-Real-IP           $remote_addr;
        proxy_set_header         X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header         X-Forwarded-Proto   $scheme;
        proxy_set_header         X-Forwarded-Host    $http_host;
    }
}
